{"ast":null,"code":"var _jsxFileName = \"/home/feli/Desktop/prog/posts/client/src/components/RutinaDetail.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RutinaDetail(ejercicios) {\n  console.log(ejercicios.props);\n  const exercisesArray = ejercicios.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: exercisesArray.map((ejercicio, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: ejercicio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"sets\",\n          placeholder: \"Sets\",\n          value: formData.sets,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"reps\",\n          placeholder: \"Reps\",\n          value: formData.reps,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"weight\",\n          placeholder: \"Weight\",\n          value: formData.weight,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n_c = RutinaDetail;\nexport default RutinaDetail;\n{/*import React, { useState } from 'react';\n import axios from 'axios';\n const FormEjercicios = ({ exercise, onChange, formData }) => {\n  return (\n    <form>\n      <input\n        type=\"number\"\n        name=\"sets\"\n        placeholder=\"Sets\"\n        value={formData.sets}\n        onChange={onChange}\n      />\n      <input\n        type=\"number\"\n        name=\"reps\"\n        placeholder=\"Reps\"\n        value={formData.reps}\n        onChange={onChange}\n      />\n      <input\n        type=\"number\"\n        name=\"weight\"\n        placeholder=\"Weight\"\n        value={formData.weight}\n        onChange={onChange}\n      />\n    </form>\n  );\n };\n \n function RutinaDetail({ ejercicios }) {\n  // Initialize state to hold form data for each exercise\n  const ejerciciosArray = ejercicios.props\n  \n  const [formData, setFormData] = useState(\n    ejerciciosArray.map(() => ({ sets: '', reps: '', weight: '' }))\n  );\n   // Function to handle changes to any form input\n  const handleChange = (index, e) => {\n    const newFormData = [...formData];\n    newFormData[index] = {\n      ...newFormData[index],\n      [e.target.name]: e.target.value\n    };\n    setFormData(newFormData);\n  };\n   // Function to handle form submission\n  const handleSubmitAll = async (e) => {\n    e.preventDefault();\n    try {\n      // Map over the exercises and form data to create an array of promises\n      const promises = ejerciciosArray.map((exercise, index) =>\n        axios.post('/api/workouts', {\n          exercise,\n          ...formData[index]\n        })\n      );\n      // Wait for all promises to resolve\n      const responses = await Promise.all(promises);\n      console.log(responses.map(res => res.data));\n      // Optionally, clear the form after submission\n      setFormData(formData.map(() => ({ sets: '', reps: '', weight: '' })));\n    } catch (error) {\n      console.error('Error submitting workouts:', error);\n    }\n  };\n   return (\n    <div>\n      {ejerciciosArray.map((ejercicio, index) => (\n        <div key={index}>\n          <h2>{ejercicio}</h2>\n          <FormEjercicios\n            exercise={ejercicio}\n            formData={formData[index]}\n            onChange={(e) => handleChange(index, e)}\n          />\n        </div>\n      ))}\n      <button onClick={handleSubmitAll}>Submit All</button>\n    </div>\n  );\n }\n export default RutinaDetail;*/}\nvar _c;\n$RefreshReg$(_c, \"RutinaDetail\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RutinaDetail","ejercicios","console","log","props","exercisesArray","children","map","ejercicio","index","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","formData","sets","onChange","reps","weight","_c","$RefreshReg$"],"sources":["/home/feli/Desktop/prog/posts/client/src/components/RutinaDetail.jsx"],"sourcesContent":["import React from 'react'\n\nfunction RutinaDetail(ejercicios) {\n  console.log(ejercicios.props)\n  const exercisesArray = ejercicios.props\n  return ( <div>\n    {exercisesArray.map((ejercicio, index) => (\n    <div key={index}>\n      <h2>{ejercicio}</h2>\n      <form>\n      <input\n        type=\"number\"\n        name=\"sets\"\n        placeholder=\"Sets\"\n        value={formData.sets}\n        onChange={onChange}\n      />\n      <input\n        type=\"number\"\n        name=\"reps\"\n        placeholder=\"Reps\"\n        value={formData.reps}\n        onChange={onChange}\n      />\n      <input\n        type=\"number\"\n        name=\"weight\"\n        placeholder=\"Weight\"\n        value={formData.weight}\n        onChange={onChange}\n      />\n    </form>\n    </div>))}\n  </div>\n  )\n}\n\nexport default RutinaDetail\n\n\n\n\n\n\n{/*import React, { useState } from 'react';\nimport axios from 'axios';\nconst FormEjercicios = ({ exercise, onChange, formData }) => {\n  return (\n    <form>\n      <input\n        type=\"number\"\n        name=\"sets\"\n        placeholder=\"Sets\"\n        value={formData.sets}\n        onChange={onChange}\n      />\n      <input\n        type=\"number\"\n        name=\"reps\"\n        placeholder=\"Reps\"\n        value={formData.reps}\n        onChange={onChange}\n      />\n      <input\n        type=\"number\"\n        name=\"weight\"\n        placeholder=\"Weight\"\n        value={formData.weight}\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\n\nfunction RutinaDetail({ ejercicios }) {\n  // Initialize state to hold form data for each exercise\n  const ejerciciosArray = ejercicios.props\n  \n  const [formData, setFormData] = useState(\n    ejerciciosArray.map(() => ({ sets: '', reps: '', weight: '' }))\n  );\n\n  // Function to handle changes to any form input\n  const handleChange = (index, e) => {\n    const newFormData = [...formData];\n    newFormData[index] = {\n      ...newFormData[index],\n      [e.target.name]: e.target.value\n    };\n    setFormData(newFormData);\n  };\n\n  // Function to handle form submission\n  const handleSubmitAll = async (e) => {\n    e.preventDefault();\n    try {\n      // Map over the exercises and form data to create an array of promises\n      const promises = ejerciciosArray.map((exercise, index) =>\n        axios.post('/api/workouts', {\n          exercise,\n          ...formData[index]\n        })\n      );\n      // Wait for all promises to resolve\n      const responses = await Promise.all(promises);\n      console.log(responses.map(res => res.data));\n      // Optionally, clear the form after submission\n      setFormData(formData.map(() => ({ sets: '', reps: '', weight: '' })));\n    } catch (error) {\n      console.error('Error submitting workouts:', error);\n    }\n  };\n\n  return (\n    <div>\n      {ejerciciosArray.map((ejercicio, index) => (\n        <div key={index}>\n          <h2>{ejercicio}</h2>\n          <FormEjercicios\n            exercise={ejercicio}\n            formData={formData[index]}\n            onChange={(e) => handleChange(index, e)}\n          />\n        </div>\n      ))}\n      <button onClick={handleSubmitAll}>Submit All</button>\n    </div>\n  );\n}\n\nexport default RutinaDetail;*/}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,YAAYA,CAACC,UAAU,EAAE;EAChCC,OAAO,CAACC,GAAG,CAACF,UAAU,CAACG,KAAK,CAAC;EAC7B,MAAMC,cAAc,GAAGJ,UAAU,CAACG,KAAK;EACvC,oBAASL,OAAA;IAAAO,QAAA,EACND,cAAc,CAACE,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACrCV,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAKE;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBd,OAAA;QAAAO,QAAA,gBACAP,OAAA;UACEe,IAAI,EAAC,QAAQ;UACbC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,MAAM;UAClBC,KAAK,EAAEC,QAAQ,CAACC,IAAK;UACrBC,QAAQ,EAAEA;QAAS;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACFd,OAAA;UACEe,IAAI,EAAC,QAAQ;UACbC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,MAAM;UAClBC,KAAK,EAAEC,QAAQ,CAACG,IAAK;UACrBD,QAAQ,EAAEA;QAAS;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACFd,OAAA;UACEe,IAAI,EAAC,QAAQ;UACbC,IAAI,EAAC,QAAQ;UACbC,WAAW,EAAC,QAAQ;UACpBC,KAAK,EAAEC,QAAQ,CAACI,MAAO;UACvBF,QAAQ,EAAEA;QAAS;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA,GAxBGJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAyBV,CAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER;AAACU,EAAA,GAjCQvB,YAAY;AAmCrB,eAAeA,YAAY;AAO3B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAlFC;AAuF8B,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}